{"ast":null,"code":"import _defineProperty from \"/Users/johnbender/Documents/savingscalculatorapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/johnbender/Documents/savingscalculatorapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/johnbender/Documents/savingscalculatorapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/johnbender/Documents/savingscalculatorapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johnbender/Documents/savingscalculatorapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/johnbender/Documents/savingscalculatorapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/johnbender/Documents/savingscalculatorapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/johnbender/Documents/savingscalculatorapp/src/components/FieldGenerator/PercentWizard.js\";\nimport React from \"react\";\n\nvar PercentWizard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PercentWizard, _React$Component);\n\n  function PercentWizard(props) {\n    var _this;\n\n    _classCallCheck(this, PercentWizard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PercentWizard).call(this, props));\n    _this.state = {\n      prompt: [],\n      rate: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePromptChange = _this.handlePromptChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRateChange = _this.handleRateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormSubmit = _this.handleFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PercentWizard, [{\n    key: \"handleChange\",\n    value: function handleChange(evt) {\n      this.setState(_defineProperty({}, evt.target.name, evt.target.value));\n      evt.preventDefault();\n      console.log(this.state.prompt);\n      console.log(this.state.rate);\n    }\n  }, {\n    key: \"handlePromptChange\",\n    value: function handlePromptChange(e) {\n      this.props.onPerPromptChange(e.target.value);\n      e.preventDefault(); // console.log(this.props.perPromptState) <--created infinite, browser-crashing loop\n      //it is currently populating the field with the changed contents of the state\n      //this means that the state is changing(good) but you need to fix the repopulation thing\n      //ALSO note the query strings at the top--these will submit when you submit the form, and that's what you want to change the state\n    }\n  }, {\n    key: \"handleRateChange\",\n    value: function handleRateChange(e) {\n      this.props.onRateChange(e.target.value);\n      e.preventDefault(); // console.log(this.props.rateState) <--created infinite, browser-crashing loop\n    } // handlePromptChange = () => {\n    //     let text = this.value;\n    //     this.props.handlePromptChange(text)\n    // }\n    // handleFormSubmit(e) {\n    //     this.props.onFormSubmit(e.target);\n    //     e.preventDefault();\n    //     console.log(e.target)\n    // }\n\n  }, {\n    key: \"handleFormSubmit\",\n    value: function handleFormSubmit(e) {\n      this.props.onFormSubmit(e.target);\n      e.preventDefault();\n      console.log(e.target);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var perPromptState = this.state.prompt;\n      var rateState = this.state.rate;\n      return React.createElement(\"div\", {\n        className: \"ba br2 mb3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Enter the text that prompts your customers for their current rate:\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleChange // value={perPromptState}\n        ,\n        className: \"br2\",\n        type: \"text\",\n        name: \"prompt\",\n        placeholder: \"eg.: What is your current monthly rate?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Enter your business's rate (this will not display)\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleChange // value={rateState}\n        ,\n        className: \"br2\",\n        type: \"text\",\n        name: \"rate\",\n        placeholder: \"eg.: 4.5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), \"%\"), React.createElement(\"button\", {\n        className: \"f6 link dim br3 ph3 pv2 mb2 dib white bg-dark-blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Create Percent Calculator\")));\n    }\n  }]);\n\n  return PercentWizard;\n}(React.Component); //this.state.prompt, this.state.rate);\n//evt.preventDefault()\n\n\nexport default PercentWizard;","map":{"version":3,"sources":["/Users/johnbender/Documents/savingscalculatorapp/src/components/FieldGenerator/PercentWizard.js"],"names":["React","PercentWizard","props","state","prompt","rate","handleChange","bind","handlePromptChange","handleRateChange","handleFormSubmit","evt","setState","target","name","value","preventDefault","console","log","e","onPerPromptChange","onRateChange","onFormSubmit","perPromptState","rateState","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass PercentWizard extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            prompt: [],\n            rate: []\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handlePromptChange = this.handlePromptChange.bind(this);\n        this.handleRateChange = this.handleRateChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    }\n      \n      handleChange (evt) {\n        this.setState({ [evt.target.name]: evt.target.value });\n        evt.preventDefault();\n        console.log(this.state.prompt)\n        console.log(this.state.rate)\n      }\n\n      handlePromptChange (e) {\n        this.props.onPerPromptChange(e.target.value);\n        e.preventDefault();\n        // console.log(this.props.perPromptState) <--created infinite, browser-crashing loop\n        //it is currently populating the field with the changed contents of the state\n        //this means that the state is changing(good) but you need to fix the repopulation thing\n        //ALSO note the query strings at the top--these will submit when you submit the form, and that's what you want to change the state\n      }\n\n      handleRateChange (e) {\n        this.props.onRateChange(e.target.value);\n        e.preventDefault();\n        // console.log(this.props.rateState) <--created infinite, browser-crashing loop\n      }\n\n    // handlePromptChange = () => {\n    //     let text = this.value;\n    //     this.props.handlePromptChange(text)\n    // }\n\n    // handleFormSubmit(e) {\n    //     this.props.onFormSubmit(e.target);\n    //     e.preventDefault();\n    //     console.log(e.target)\n    // }\n\n    handleFormSubmit(e) {\n        this.props.onFormSubmit(e.target);\n        e.preventDefault();\n        console.log(e.target)\n    }\n\n    render() {\n        const perPromptState = this.state.prompt;\n        const rateState = this.state.rate;\n        return (\n            <div className=\"ba br2 mb3\">\n                <form onSubmit={this.handleFormSubmit()}>\n                    <h3>Enter the text that prompts your customers for their current rate:</h3>\n                        <p><input\n                            onChange={this.handleChange}\n                            // value={perPromptState}\n                            className=\"br2\" \n                            type=\"text\"\n                            name=\"prompt\"\n                            placeholder=\"eg.: What is your current monthly rate?\"/>\n                            </p>\n                    <h3>Enter your business's rate (this will not display)</h3>\n                        <p><input\n                            onChange={this.handleChange}\n                            // value={rateState}\n                            className=\"br2\"\n                            type=\"text\"\n                            name=\"rate\"\n                            placeholder=\"eg.: 4.5\"/>\n                            %</p>\n                    <button\n                    className=\"f6 link dim br3 ph3 pv2 mb2 dib white bg-dark-blue\"\n                    >Create Percent Calculator</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n//this.state.prompt, this.state.rate);\n//evt.preventDefault()\nexport default PercentWizard;"]},"metadata":{},"sourceType":"module"}