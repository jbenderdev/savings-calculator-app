{"ast":null,"code":"import _classCallCheck from \"/Users/johnbender/Documents/savingscalculatorapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/johnbender/Documents/savingscalculatorapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/johnbender/Documents/savingscalculatorapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johnbender/Documents/savingscalculatorapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/johnbender/Documents/savingscalculatorapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/johnbender/Documents/savingscalculatorapp/src/components/FieldGenerator/SavingsResult.js\";\nimport React from \"react\";\n\nvar SavingsResult =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SavingsResult, _React$Component);\n\n  function SavingsResult(props) {\n    var _this;\n\n    _classCallCheck(this, SavingsResult);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SavingsResult).call(this, props));\n    _this.state = {\n      renderSavings: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SavingsResult, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var businessRate = this.props.businessRate;\n      var customerRate = this.props.customerRate;\n      var difference = (parseFloat(customerRate) - parseFloat(businessRate)).toFixed(2); //this is a really bad conditional, but it works for now\n\n      if (JSON.stringify(this.props.wizardObject).includes('dollar')) {\n        this.setState({\n          renderSavings: \"$\".concat(difference)\n        });\n      } else {\n        this.setState({\n          renderSavings: \"\".concat(difference, \"%\")\n        });\n      }\n\n      console.log('renderSavings= ' + this.state.renderSavings);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"f5 lh-copy dark-gray fw2 f4-l\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"We can save you up to \", this.state.renderSavings, \"!\"));\n    }\n  }]);\n\n  return SavingsResult;\n}(React.Component);\n\nexport default SavingsResult;","map":{"version":3,"sources":["/Users/johnbender/Documents/savingscalculatorapp/src/components/FieldGenerator/SavingsResult.js"],"names":["React","SavingsResult","props","state","renderSavings","businessRate","customerRate","difference","parseFloat","toFixed","JSON","stringify","wizardObject","includes","setState","console","log","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,a;;;;;AACF,yBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAChB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE;AADN,KAAb;AAFgB;AAKnB;;;;wCAEmB;AAChB,UAAIC,YAAY,GAAG,KAAKH,KAAL,CAAWG,YAA9B;AACA,UAAIC,YAAY,GAAG,KAAKJ,KAAL,CAAWI,YAA9B;AACA,UAAIC,UAAU,GAAG,CAACC,UAAU,CAACF,YAAD,CAAV,GAA2BE,UAAU,CAACH,YAAD,CAAtC,EAAsDI,OAAtD,CAA8D,CAA9D,CAAjB,CAHgB,CAIhB;;AACA,UAAIC,IAAI,CAACC,SAAL,CAAe,KAAKT,KAAL,CAAWU,YAA1B,EAAwCC,QAAxC,CAAiD,QAAjD,CAAJ,EAAgE;AAC5D,aAAKC,QAAL,CAAc;AAACV,UAAAA,aAAa,aAAMG,UAAN;AAAd,SAAd;AACH,OAFD,MAEO;AACH,aAAKO,QAAL,CAAc;AAACV,UAAAA,aAAa,YAAKG,UAAL;AAAd,SAAd;AACH;;AACDQ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoB,KAAKb,KAAL,CAAWC,aAA3C;AACH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,+BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAoE,KAAKD,KAAL,CAAWC,aAA/E,MADJ,CADJ;AAKH;;;;EA3BuBJ,KAAK,CAACiB,S;;AA8BlC,eAAehB,aAAf","sourcesContent":["import React from \"react\";\n\nclass SavingsResult extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            renderSavings: \"\"\n        }\n    } \n\n    componentDidMount() {\n        let businessRate = this.props.businessRate;\n        let customerRate = this.props.customerRate;\n        let difference = (parseFloat(customerRate) - parseFloat(businessRate)).toFixed(2);\n        //this is a really bad conditional, but it works for now\n        if (JSON.stringify(this.props.wizardObject).includes('dollar')) {\n            this.setState({renderSavings: `$${difference}`});\n        } else {\n            this.setState({renderSavings: `${difference}%`});\n        }\n        console.log('renderSavings= ' + this.state.renderSavings)\n    }\n\n    render() {\n        return (\n            <div>\n                <p className=\"f5 lh-copy dark-gray fw2 f4-l\">We can save you up to {this.state.renderSavings}!</p>\n            </div>\n        )\n    }\n}\n\nexport default SavingsResult;"]},"metadata":{},"sourceType":"module"}