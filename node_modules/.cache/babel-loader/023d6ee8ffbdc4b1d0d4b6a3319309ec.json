{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/johnbender/Documents/savings-calculator/savingscalculator/src/components/FieldGenerator/FieldGenerator.js\";\n\nimport React from \"react\"; //need to modify to affect App.js state\n//import the Wizards into App.js instead and add conditionals to CreateFields in App.js\n\nvar FieldGenerator = function FieldGenerator() {\n  return React.createElement(\"div\", {\n    className: \"tc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"What type of pricing do you use? (add as many as needed)\"), React.createElement(\"button\", {\n    className: \"\",\n    onClick: _this.addPercentField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Percentage (%)\"), React.createElement(\"button\", {\n    className: \"\",\n    onClick: _this.addDollarField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Dollar ($)\"));\n};\n\nexport default FieldGenerator;","map":{"version":3,"sources":["/Users/johnbender/Documents/savings-calculator/savingscalculator/src/components/FieldGenerator/FieldGenerator.js"],"names":["React","FieldGenerator","addPercentField","addDollarField"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,SACI;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADJ,EAEI;AACA,IAAA,SAAS,EAAC,EADV;AAEA,IAAA,OAAO,EAAE,KAAI,CAACC,eAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAMI;AACA,IAAA,SAAS,EAAC,EADV;AAEA,IAAA,OAAO,EAAE,KAAI,CAACC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CADJ;AAaH,CAdD;;AAgBA,eAAeF,cAAf","sourcesContent":["import React from \"react\";\n\n//need to modify to affect App.js state\n//import the Wizards into App.js instead and add conditionals to CreateFields in App.js\nconst FieldGenerator = () => { \n    return (\n        <div className=\"tc\">\n            <p>What type of pricing do you use? (add as many as needed)</p>\n            <button\n            className=\"\"\n            onClick={this.addPercentField}\n            >Percentage (%)</button>\n            <button\n            className=\"\"\n            onClick={this.addDollarField}\n            >Dollar ($)</button>\n        </div>\n    )\n}\n\nexport default FieldGenerator;"]},"metadata":{},"sourceType":"module"}